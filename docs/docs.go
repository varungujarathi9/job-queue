// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/jobs/dequeue": {
            "get": {
                "description": "Dequeues a Job from the queue",
                "produces": [
                    "application/json"
                ],
                "summary": "Dequeue Job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Queue Consumer ID",
                        "name": "QUEUE_CONSUMER",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Job"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/jobs/enqueue": {
            "post": {
                "description": "Enqueue Job by ID",
                "consumes": [
                    "application/json"
                ],
                "summary": "Enqueue Job",
                "parameters": [
                    {
                        "description": "Job object",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Job"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/jobs/{job_id}": {
            "get": {
                "description": "Retrieves a Job by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get Job by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Job"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/jobs/{job_id}/conclude": {
            "put": {
                "description": "Concludes a Job by ID",
                "produces": [
                    "text/plain"
                ],
                "summary": "Conclude Job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job concluded successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Job": {
            "type": "object",
            "properties": {
                "ConsumedBy": {
                    "type": "integer"
                },
                "ID": {
                    "type": "integer"
                },
                "Payload": {},
                "Result": {},
                "Status": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/jobs",
	Schemes:          []string{},
	Title:            "Job Queue",
	Description:      "This is a simple job queue server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
